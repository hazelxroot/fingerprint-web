{
  "version": 3,
  "file": "fingerprint-web.js",
  "sources": [
    "../shared/constants.ts",
    "../shared/httpError.ts",
    "../shared/sanitizeFileName.ts",
    "../src/index.ts",
    "../shared/is.ts"
  ],
  "sourcesContent": [
    "export const TAG_AUDIO_SUPPORTED_EXT = [\n  '.mp3',\n  '.ogg',\n  '.spx',\n  '.mpc',\n  '.ape',\n  '.flac',\n  '.wv',\n  '.tta',\n  '.wma',\n  '.m4a',\n  '.m4b',\n  '.m4p',\n  '.mp4',\n  '.3g2',\n  '.wav',\n  '.aif',\n  '.aiff',\n  '.opus',\n];\n\nexport enum STATUS {\n  CREATED = 'CREATED',\n  UPLOADED = 'UPLOADED',\n  SUBMITTED = 'SUBMITTED',\n  ERROR = 'ERROR',\n  RESOLVED = 'RESOLVED',\n  NOT_FOUND = 'NOT_FOUND',\n  FOUND = 'FOUND',\n  DONE = 'DONE',\n  DELETED = 'DELETED',\n}\n\nexport enum ERROR {\n  UNKNOWN_ISRC = 'Unknown ISRC',\n  FAILED_TO_SUBMIT = 'Failed to submit',\n  FAILED_TO_PROCESS = 'Failed to process',\n}\n\nexport enum DOWNLOAD_OPTIONS {\n  URL = 'url',\n  REDIRECT = 'redirect',\n}\n",
    "export class HttpError extends Error {\n  statusCode: number;\n  constructor(message: string, statusCode: number) {\n    super(message);\n    this.statusCode = statusCode;\n    Object.setPrototypeOf(this, HttpError.prototype);\n  }\n}\n",
    "import { TAG_AUDIO_SUPPORTED_EXT } from './constants';\nimport { HttpError } from './httpError';\n\nexport function sanitizeFolderName(folderName: string) {\n  return (\n    folderName\n      /* Remove Line-Breaks */\n      .replace(/((\\r\\n)|\\r|\\n)+/gm, '')\n      /* Normalize Windows directory separators */\n      .replace(/\\\\/gm, '/')\n      /* Remove empty or ._- only dirs */\n      .replace(/(\\/|^)[\\._\\-\\/]+\\//g, '/')\n  );\n}\n\nexport default function sanitizeFileName(fileName: string) {\n  const ext = fileName.split('.').pop();\n\n  if (!ext) {\n    throw new HttpError(`${fileName} is missing an extension`, 400);\n  }\n\n  if (!TAG_AUDIO_SUPPORTED_EXT.includes(`.${ext.toLowerCase()}`)) {\n    throw new HttpError(`${ext} extension is not supported`, 415);\n  }\n\n  return `${sanitizeFolderName(\n    fileName.substring(0, fileName.length - (ext.length + 1)),\n  )}.${ext.toLowerCase()}`;\n}\n",
    "import type { FolderList, File as SingleFile, FileList } from '../shared/Audio';\nimport sanitizeFileName, {\n  sanitizeFolderName,\n} from '../shared/sanitizeFileName';\nimport { DOWNLOAD_OPTIONS } from '../shared/constants';\n\ninterface Config {\n  token: string;\n  apiUrl: string;\n}\n\ntype UserConfig = Pick<Config, 'token'> & Partial<Omit<Config, 'token'>>;\n\nexport * from '../shared/is';\nexport { STATUS } from '../shared/constants';\nexport type { UserConfig as Config };\n\nexport default class MusicubeFingerprintingWeb {\n  config: Config;\n  constructor({\n    token,\n    apiUrl = 'https://w9dxkmzqu6.execute-api.eu-central-1.amazonaws.com',\n  }: UserConfig) {\n    this.config = { token, apiUrl };\n  }\n  async upload(\n    file: File & { overwrite?: boolean },\n    progress: (uploaded: number, total: number) => void = () => {},\n  ): Promise<string> {\n    const sanitizedName = sanitizeFileName(file.name);\n    const res = await fetch(\n      `${this.config.apiUrl.replace(/\\/$/, '')}/upload/${encodeURIComponent(\n        sanitizedName,\n      )}`,\n      {\n        headers: {\n          'x-mc-overwrite': file.overwrite ? 'yes' : 'no',\n          authorization: `Bearer ${this.config.token}`,\n        },\n      },\n    );\n\n    if (res.status !== 200) {\n      throw new Error(await res.text());\n    }\n\n    const { fields, url, name } = await res.json();\n    const form = new FormData();\n    const xhr = new XMLHttpRequest();\n\n    for (const key in fields) {\n      form.append(key, fields[key]);\n    }\n    form.append('file', file);\n\n    return new Promise<string>((res, rej) => {\n      xhr.onload = () => {\n        if (xhr.status === 204) {\n          res(name);\n        } else {\n          rej(new Error('Upload Failed'));\n        }\n      };\n      xhr.onerror = rej;\n      xhr.upload.addEventListener(\n        'progress',\n        (evt) => {\n          progress(evt.loaded, evt.total);\n        },\n        false,\n      );\n\n      xhr.open('POST', url, true);\n      xhr.send(form);\n    });\n  }\n  async folders() {\n    const res = await fetch(`${this.config.apiUrl.replace(/\\/$/, '')}/audio/`, {\n      headers: {\n        authorization: `Bearer ${this.config.token}`,\n      },\n    });\n\n    if (res.status !== 200) {\n      throw new Error(await res.text());\n    }\n\n    return ((await res.json()) as FolderList).folders;\n  }\n  async files(folder: string) {\n    if (sanitizeFolderName(folder) !== folder) {\n      throw new Error(`Invalid folder name: ${folder}`);\n    }\n\n    const res = await fetch(\n      `${this.config.apiUrl.replace(/\\/$/, '')}/audio/${encodeURIComponent(\n        folder,\n      )}/`,\n      {\n        headers: {\n          authorization: `Bearer ${this.config.token}`,\n        },\n      },\n    );\n\n    if (res.status !== 200) {\n      throw new Error(await res.text());\n    }\n\n    return ((await res.json()) as FileList).files;\n  }\n  async file(file: string) {\n    if (\n      sanitizeFileName(file) !== file ||\n      file.split('/').filter((t) => t && t.length).length !== 2\n    ) {\n      throw new Error(`Invalid file name: ${file}`);\n    }\n\n    const res = await fetch(\n      `${this.config.apiUrl.replace(/\\/$/, '')}/audio/${encodeURIComponent(\n        file,\n      )}`,\n      {\n        headers: {\n          authorization: `Bearer ${this.config.token}`,\n        },\n      },\n    );\n\n    if (res.status !== 200) {\n      throw new Error(await res.text());\n    }\n\n    return ((await res.json()) as SingleFile).file;\n  }\n  async delete(file: string) {\n    if (\n      sanitizeFileName(file) !== file ||\n      file.split('/').filter((t) => t && t.length).length !== 2\n    ) {\n      throw new Error(`Invalid file name: ${file}`);\n    }\n\n    const res = await fetch(\n      `${this.config.apiUrl.replace(/\\/$/, '')}/audio/${encodeURIComponent(\n        file,\n      )}`,\n      {\n        method: 'DELETE',\n        headers: {\n          authorization: `Bearer ${this.config.token}`,\n        },\n      },\n    );\n\n    if (res.status !== 204) {\n      throw new Error(await res.text());\n    }\n\n    return;\n  }\n  async resubmit(file: string) {\n    if (\n      sanitizeFileName(file) !== file ||\n      file.split('/').filter((t) => t && t.length).length !== 2\n    ) {\n      throw new Error(`Invalid file name: ${file}`);\n    }\n\n    const res = await fetch(\n      `${this.config.apiUrl.replace(/\\/$/, '')}/audio/${encodeURIComponent(\n        file,\n      )}`,\n      {\n        method: 'POST',\n        headers: {\n          'x-mc-resubmit': 'yes',\n          authorization: `Bearer ${this.config.token}`,\n        },\n      },\n    );\n\n    if (res.status !== 204) {\n      throw new Error(await res.text());\n    }\n\n    return;\n  }\n  async downloadLink(file: string) {\n    if (\n      sanitizeFileName(file) !== file ||\n      file.split('/').filter((t) => t && t.length).length !== 2\n    ) {\n      throw new Error(`Invalid file name: ${file}`);\n    }\n\n    const res = await fetch(\n      `${this.config.apiUrl.replace(/\\/$/, '')}/audio/${encodeURIComponent(\n        file,\n      )}`,\n      {\n        headers: {\n          'x-mc-download': DOWNLOAD_OPTIONS.URL,\n          authorization: `Bearer ${this.config.token}`,\n        },\n      },\n    );\n\n    if (res.status !== 200) {\n      throw new Error(await res.text());\n    }\n\n    return res.text();\n  }\n}\n",
    "import type {\n  Created as CreatedInt,\n  Uploaded as UploadedInt,\n  Submitted as SubmittedInt,\n  Resolved as ResolvedInt,\n  NotFound as NotFoundInt,\n  Found as FoundInt,\n  Done as DoneInt,\n  Error as ErrorInt,\n  External,\n  SomeExternalAudio,\n} from './Audio';\nimport { STATUS } from './constants';\n\nexport type Created = External<CreatedInt>;\nexport type Uploaded = External<UploadedInt>;\nexport type Submitted = External<SubmittedInt>;\nexport type Resolved = External<ResolvedInt>;\nexport type NotFound = External<NotFoundInt>;\nexport type Found = External<FoundInt>;\nexport type Done = External<DoneInt>;\nexport type Error = External<ErrorInt>;\nexport type File = SomeExternalAudio;\n\nexport function isCreated(file: File): file is Created;\nexport function isCreated(\n  file: File,\n  exact: false,\n): file is Created | Uploaded | Submitted | NotFound | Resolved | Found | Done;\nexport function isCreated(file: File, exact: boolean = true): boolean {\n  return exact\n    ? file.status === STATUS.CREATED\n    : [\n        STATUS.CREATED,\n        STATUS.UPLOADED,\n        STATUS.SUBMITTED,\n        STATUS.NOT_FOUND,\n        STATUS.RESOLVED,\n        STATUS.FOUND,\n        STATUS.DONE,\n      ].includes(file.status);\n}\nexport function isUploaded(file: File): file is Uploaded;\nexport function isUploaded(\n  file: File,\n  exact: false,\n): file is Uploaded | Submitted | NotFound | Resolved | Found | Done;\nexport function isUploaded(file: File, exact: boolean = true): boolean {\n  return exact\n    ? file.status === STATUS.UPLOADED\n    : [\n        STATUS.UPLOADED,\n        STATUS.SUBMITTED,\n        STATUS.NOT_FOUND,\n        STATUS.RESOLVED,\n        STATUS.FOUND,\n        STATUS.DONE,\n      ].includes(file.status);\n}\nexport function isSubmitted(file: File): file is Submitted;\nexport function isSubmitted(\n  file: File,\n  exact: false,\n): file is Submitted | NotFound | Resolved | Found | Done;\nexport function isSubmitted(file: File, exact: boolean = true): boolean {\n  return exact\n    ? file.status === STATUS.SUBMITTED\n    : [\n        STATUS.SUBMITTED,\n        STATUS.NOT_FOUND,\n        STATUS.RESOLVED,\n        STATUS.FOUND,\n        STATUS.DONE,\n      ].includes(file.status);\n}\nexport function isResolved(file: File): file is Resolved;\nexport function isResolved(\n  file: File,\n  exact: false,\n): file is Resolved | Found | Done;\nexport function isResolved(file: File, exact: boolean = true): boolean {\n  return exact\n    ? file.status === STATUS.RESOLVED\n    : [STATUS.RESOLVED, STATUS.FOUND, STATUS.DONE].includes(file.status);\n}\nexport function isNotFound(file: File): file is NotFound {\n  return file.status === STATUS.NOT_FOUND;\n}\nexport function isFound(file: File): file is Found;\nexport function isFound(file: File, exact: false): file is Found | Done;\nexport function isFound(file: File, exact: boolean = true): boolean {\n  return exact\n    ? file.status === STATUS.FOUND\n    : [STATUS.FOUND, STATUS.DONE].includes(file.status);\n}\nexport function isDone(file: File): file is Done {\n  return file.status === STATUS.DONE;\n}\nexport function isError(file: File): file is Error {\n  return file.status === STATUS.ERROR;\n}\n"
  ],
  "names": [
    "STATUS",
    "ERROR",
    "DOWNLOAD_OPTIONS",
    "TAG_AUDIO_SUPPORTED_EXT",
    "HttpError",
    "message",
    "statusCode",
    "_this",
    "Object",
    "setPrototypeOf",
    "prototype",
    "Error",
    "sanitizeFolderName",
    "folderName",
    "replace",
    "sanitizeFileName",
    "fileName",
    "ext",
    "split",
    "pop",
    "includes",
    "toLowerCase",
    "substring",
    "length",
    "token",
    "apiUrl",
    "config",
    "this",
    "upload",
    "file",
    "progress",
    "sanitizedName",
    "name",
    "fetch",
    "encodeURIComponent",
    "headers",
    "overwrite",
    "authorization",
    "res",
    "json",
    "fields",
    "url",
    "form",
    "FormData",
    "xhr",
    "XMLHttpRequest",
    "key",
    "append",
    "Promise",
    "rej",
    "onload",
    "status",
    "onerror",
    "addEventListener",
    "evt",
    "loaded",
    "total",
    "open",
    "send",
    "text",
    "folders",
    "files",
    "folder",
    "filter",
    "t",
    "method",
    "resubmit",
    "downloadLink",
    "URL",
    "exact",
    "CREATED",
    "UPLOADED",
    "SUBMITTED",
    "NOT_FOUND",
    "RESOLVED",
    "FOUND",
    "DONE"
  ],
  "mappings": "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"
}
